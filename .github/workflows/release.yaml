name: Release Charts

# Add these permissions
permissions:
  contents: write # Needed to push to gh-pages
  packages: write # Needed to create releases

on:
  push:
    tags:
      - 'v*'  # Matches tags starting with 'v' (e.g., v1.0.0)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true

jobs:
  release:
    name: Release Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.17.1

      - name: Package chart
        run: |
          mkdir -p .cr-release-packages
          
          # Get version from tag (remove 'v' prefix if present)
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          else
            VERSION=${{ github.event.inputs.version || '0.0.0' }}
          fi
          
          echo "Packaging chart version: $VERSION"
          
          # Package the chart with the version
          helm package chart/ -d .cr-release-packages --version $VERSION
          
          # The output will be .cr-release-packages/mimir-sync-{VERSION}.tgz

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update GitHub Pages index
        run: |
          # Get version from environment
          VERSION=""
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          else
            VERSION=${{ github.event.inputs.version || '0.0.0' }}
          fi
          
          echo "Updating index for version: $VERSION"
          
          # Move to gh-pages directory
          cd gh-pages
          
          # Download the existing index.yaml if it exists
          if [ -f index.yaml ]; then
            echo "Merging with existing index.yaml"
            helm repo index --merge index.yaml ../.cr-release-packages --url https://antnsn.github.io/mimir-sync
          else
            echo "Creating new index.yaml"
            helm repo index ../.cr-release-packages --url https://antnsn.github.io/mimir-sync
            mv ../.cr-release-packages/index.yaml .
          fi
          
          # Copy the chart package to gh-pages
          cp ../.cr-release-packages/*.tgz .
          
          # Add and commit changes
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          
          # Check if there are any changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "Update chart index for version $VERSION"
            git push origin gh-pages
          else
            echo "No changes to commit"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: .cr-release-packages/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
