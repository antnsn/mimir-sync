apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-alertmanager-sync
  namespace: mimir-rules
  annotations:
    reloader.stakater.com/auto: "true"
    configmap.reloader.stakater.com/reload: "alertmanager-config"
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: mimir-alertmanager-sync
  template:
    metadata:
      labels:
        app: mimir-alertmanager-sync
    spec:
      containers:
        - name: mimir-alertmanager-sync
          image: curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - /bin/sh
            - -c
            - |
              # Download mimirtool
              curl -fLo /tmp/mimirtool https://github.com/grafana/mimir/releases/latest/download/mimirtool-linux-amd64
              chmod +x /tmp/mimirtool

              # Get the alertmanager config from ConfigMap
              CONFIG_FILE=/tmp/alertmanager-config.yml
              echo "Copying config file from ConfigMap..."
              cat /config/config.yml > $CONFIG_FILE

              # Verify the file exists and show contents
              ls -la /config/
              ls -la /tmp/
              echo "Config file contents:"
              cat $CONFIG_FILE

              if [ ! -f "$CONFIG_FILE" ]; then
                echo "Error: Config file not found at $CONFIG_FILE"
                exit 1
              fi

              # Verify the alertmanager config before syncing
              echo "Verifying $CONFIG_FILE before syncing..."
              verification_output=$(/tmp/mimirtool alertmanager verify "$CONFIG_FILE" 2>&1)
              VERIFY_RESULT=$?

              # Display verification results
              if [ $VERIFY_RESULT -ne 0 ]; then
                echo "Error: Alertmanager config verification failed:"
                echo "$verification_output"
                exit $VERIFY_RESULT
              else
                echo "Alertmanager config verification successful"
              fi

              # Log the config file path for debugging
              echo "Syncing $CONFIG_FILE to Mimir..."

              # Run mimirtool to load the alertmanager config
              echo "Running mimirtool to load alertmanager config..."
              /tmp/mimirtool alertmanager load "$CONFIG_FILE" \
                --address="http://mimir-distributed-nginx.mimir" \
                --id=anonymous
                
              # Check the exit code
              RESULT=$?
              if [ $RESULT -ne 0 ]; then
                echo "Error: mimirtool failed with exit code $RESULT"
                exit $RESULT
              else
                echo "Successfully loaded alertmanager config"
              fi

              # Sleep to keep the container running
              echo "Alertmanager sync completed, container will remain running to wait for ConfigMap changes"
              while true; do sleep 3600; done
          # No environment variables needed for internal access
          volumeMounts:
            - name: alertmanager-config
              mountPath: /config
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config
